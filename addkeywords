#!/bin/bash
# $Id: addkeywords,v 1.69 2019/06/20 17:15:53 fulford Exp $
# $Source: /src/admin/usr/local/etc/RCS/addkeywords,v $
# $Revision: 1.69 $
# Author C W Fulford.
# Copyright 2019 (c) C W Fulford.
# Licensed for public use under the LGPL, .
# For assistance contact fulford@fulford.net 0793 572 8612
########################################################################
cmd=`basename $0`
ver=`echo "$Id: addkeywords,v 1.69 2019/06/20 17:15:53 fulford Exp $"|awk '{print $3,$4,$5}'`
syntax="$cmd [-c <configfile>] [-d] [-h <hostid>] [-v]|-V"
while [ $# -gt 0 ] ;do
	case $1 in 
		-c) config=$2;shift 2;;
		-d) set -x;debug=0; trap read debug;shift;;
		-h) hostid=$2;shift 2;;			
		-l) last=$2;shift 2;;
		-s) first=$2;shift 2;;
		-v) verbose=:;shift;;
		-V) echo "$cmd $Revision: 1.69 $ $Date: 2019/06/20 17:15:53 $"|awk '{print $1,$3,$6}';exit;;  
		*) keywords="$keywords $1";shift;;
	esac
done
dict=/usr/local/etc/keywords

##############################
carryon () {
	read -p "Continue [y/n]? " yesno
	[ $yesno != y ] && exit
}

getFiles () {
	dir=`basename \`pwd\`` 
	case $dir in
		raw) ext=CR2;;
		jpg) ext=jpg;;
		tif) ext=tif;;
		*) echo "Extension for $dir unknown" >&2
		   exit;;
	esac
	clear
	echo 
	PS3="Select first: "
	select first in *.$ext ;do
		clear
		echo -e "First file = $first\n"
		break
	done
	PS3="Select last: "
	select last in *$ext ;do
		clear
		break
	done
	files=`ls *.$ext | awk '/'$first'/,/'$last'/{print}'`
}

chkFiles () {
	keyword="$@"
	tfiles=""
	gfiles=""
	for f in $files;do
		if ! exiftool -IPTC:keywords $f|grep -q "$keyword"  ;then
			tfiles="$tfiles $f"
		else
			gfiles="$gfiles $f"
		fi
	done
	if [ ${#gfiles} -gt 0 ];then
		count=`echo $gfiles|wc -w`
		echo -e "\n\"$keyword\" already exists in $count files:"
	fi
	if [ ${#tfiles} -gt 0 ];then
		count=`echo $tfiles|wc -w`
		echo -e "\n\"$keyword\" required in $count files"
		#echo $tfiles|pr -t -8 -
		read -p "Add keyword[y/n/q]? " reply </dev/tty
		case $reply  in
			y) return $count;;
			n) return 0;;
			q) return -1;;
		esac
	else
		echo -e "Nothing to be done for \"$keyword\"">&2
		return 0
	fi
}
chkKeyword () { 
	keyword="$@"
	if  grep -q ^$keyword$ $dict ;then
		return 0
	else
		# Try partial match
		matches=(`awk '/'$keyword'/{printf "%s:",$0}' $dict`)
		# If nothing found offer to edit dictionary 
		if [ ${#matches[@]} -lt 1 ];then
			echo "Keyword \"$keyword\" is not available" >&2
			read -p "Edit keywords now [y/n]? " yesno </dev/tty 
			if [ $yesno = "y" ];then 
				sudo vi $dict </dev/tty
			fi
		else
			for ((i=0; i<${#matches[@]}; i++));do
			echo "$i) ${matches[$i]}"
			read -p "Choose keywords or quit [#/q]: " choice
		fi
	fi
}

setKeyword () {
	keyword="$@"
	exiftool -IPTC:keywords+="$keyword" $tfiles
	rm *original
}

################# Main Procedure #####################
echo here I am
if [ ${#keywords} -lt 1 ];then
	clear
	echo 
	read -p "Enter comma separated list of keywords: " keywords
fi


echo $keywords|awk -F, '{for(i=1; i<=NF; i++) print($i)}'|
while read keyword;do
	chkKeyword $keyword
#	grep -q ^$keyword$ $dict ||{
#		echo "Keyword \"$keyword\" is not available" >&2
#		read -p "Edit keywords now [y/n]? " yesno </dev/tty 
#		if [ $yesno = "y" ];then 
#			sudo vi $dict </dev/tty
#		fi
#	}
done
getFiles
echo $keywords|awk -F, '{for(i=1; i<=NF; i++) print($i)}'|
while read keyword;do
	chkKeyword "$keyword"
	chkFiles "$keyword"
	todo=$?
	if [ $todo -gt 0 ];then
		setKeyword "$keyword"
	elif [ $todo -lt 0 ];then
		exit
	fi
done	
echo "Keyword updates completed" 

